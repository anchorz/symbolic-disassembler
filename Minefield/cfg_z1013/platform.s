z9001                           =       1
z1013                           =       0
ta_alpha                        =       0
;
; z1013 os specific constants
;
BWS                             =       0xec00
BWS_LINE_WIDTH                  =       32
BWS_HEIGHT                      =       32
BWS_SIZE                        =       32*32

VK_CLS                          =       0x0c
VK_ENTER                        =       0x0d
VK_LEFT                         =       0x08
VK_RIGHT                        =       0x09
VK_UP                           =       0x0b
VK_DOWN                         =       0x0a

KEY_CODE                        =       0x0004

UP_PRST7               .equ 0x02
UP_INKEY               .equ 0x04

TAPE_OUT               .equ 0x80
PIOB_DATA              .equ 0x02
;
; application specific constants
;
CHR_MAN                         =       0x17
CHR_VISITED                     =       0xff
CHR_FREE                        =       ' '
CHR_BONUS                       =       0xca
CHR_MINE                        =       0xc9
END_ROW                         =       5
END_SCREEN_CORRECTION           =       9 ; starting line of the text
START_ROW                       =       BWS_HEIGHT-2
START_COLUMN                    =       (BWS_LINE_WIDTH/2)-1
END_COLUMN                      =       (BWS_LINE_WIDTH/2)-1
CUT_OFF                         =       (START_ROW-END_ROW-4)*BWS_LINE_WIDTH

.macro  FILL_SPACES
.endm

.macro  PROGRAM_HEADER
.endm

.macro  JOYSTICK_INIT
        call joystick_init
.endm

.macro  FILL_BACKGROUND_COLOR
.endm

.macro  END_MESSAGE
        rst 0x20
        .db UP_PRST7
        .ascis 'Auf Wiedersehen! Und weg... '
        rst 0x38
.endm

.macro  QUIT_SOUND
        ld l,#QUIT_SOUND_P1
        ld d,#QUIT_SOUND_P2
        ld e,#QUIT_SOUND_P3
quit$play_effect1:
        ld c,e
quit$play_period1:
        xor #TAPE_OUT
        out (PIOB_DATA),a
        ld b,d
        nop
        cp #QUIT_SOUND_P4
        add b
        out (PIOB_DATA),a
        ld b,d
quit$play_half_wave1:
        djnz quit$play_half_wave1
        dec c
        jr nz,quit$play_period1
        dec d
        inc e
        dec l
        jr nz,quit$play_effect1
        ld l,#QUIT_SOUND_P1
quit$play_effect2:
        ld c,e
quit$play_period2:
        xor #TAPE_OUT
        out (PIOB_DATA),a
        ld b,d
        nop
        cp #QUIT_SOUND_P4
        add b
        out (PIOB_DATA),a
        ld b,d
quit$play_half_wave2:
        djnz quit$play_half_wave2
        dec c
        jr nz,quit$play_period2
        inc d
        dec e
        dec l
        jr nz,quit$play_effect2
.endm

.macro  CLICK_SOUND
        push af
        ld b,#WAVE_PERIODS
        xor a
$click_next_period:
        ld c,#WAVE_LEN_285Hz; 1-half wave has 3500 clock cycles
$click_keep_level:
        out (PIOB_DATA),a
        nop
        nop
        dec c
        jr nz,$click_keep_level
        xor #TAPE_OUT
        djnz $click_next_period
        pop af
.endm

.macro  INKEY
        xor     a
        ld      (KEY_CODE),a
        rst     0x20
        .db     UP_INKEY
        or      a
        jr      z,up_inch$joystick
.endm

.macro  JOYSTICK
up_inch$joystick:
        in a,(0x00)
        and #0x1f
        ld c,a
        ld b,#0x80
up_inch$debounce1:
        djnz up_inch$debounce1
        in a,(0x00)
        and #0x1f;
        cp c
        jr nz,up_inch$joystick
joystick:
        ld a,(last_joystick)
        cp c
        jr z,up_inch
        ld a,c
        ld (last_joystick),a
        cp #0x1e; left
        jr z,up_inch$is_left
        cp #0x1d; right
        jr z,up_inch$is_right
        cp #0x1b; right
        jr z,up_inch$is_down
        cp #0x17; up
        jr z,up_inch$is_up
        and #0x10
        ret nz
        ld a,#'S'
        ret
joystick_init:
        ld a,#0xcf; bitwise input
        out (0x01),a
        ld a,#0x1f;
        out (0x01),a
        xor a
        ld (last_joystick),a
        ld a,#0x60 ; both enabled
        out (0x00),a
        ret
.endm

.macro  TXT_MINES
        .ascii '                                '
        FILL_SPACES
        .ascii '   '
        .ascii 'MINEN:'
.endm

.macro  TXT_PUNKTE
        .ascii '    '
        .ascii '     PUNKTE:'
.endm

.macro  TXT_EMPTY_SCREEN
        .ascii '       '
        .db 0xa8
        .rept (BWS_LINE_WIDTH-2)
        .db 0xa0
        .endm
        .db 0xa9
        
        .db 0xa1
ofs_vorsicht   .equ .-txt_empty_screen+6; 5 is intentionally move right
        .rept (BWS_LINE_WIDTH-2)
        .db ' '
        .endm
        .db 0xa1
        
        .db 0xa3
        .rept (BWS_LINE_WIDTH/2-3)
        .db 0xa0
        .endm
        .db 0xa4,0xa0,0xa4
        .rept (BWS_LINE_WIDTH/2-2)
        .db 0xa0
        .endm
        .db 0xa5
        
         .db 0xa3
        .rept (BWS_LINE_WIDTH/2-3)
        .db 0xa0
        .endm
        .db 0xaa,0x20,0xa7
        .rept (BWS_LINE_WIDTH/2-2)
        .db 0xa0
        .endm
        .db 0xa5

        ;;22 times
        .rept (BWS_HEIGHT-9)
                .db 0xa1
                .rept (BWS_LINE_WIDTH-2)
                .db ' '
                .endm
                .db 0xa1
        .endm

        .db 0xa3
        .rept (BWS_LINE_WIDTH/2-3)
        .db 0xa0
        .endm
        .db 0xa9,0x20,0xa8
        .rept (BWS_LINE_WIDTH/2-2)
        .db 0xa0
        .endm
        .db 0xa5

        .db 0xa1
        .ascii '     SCI     '
        .db 0xa1,0x20,0xa1
        .ascii '    GAMES     '
        .db 0xa1

        .db 0xa7
        .rept (BWS_LINE_WIDTH/2-3)
        .db 0xa0
        .endm
        .db 0xa2,0xa0,0xa2
        .rept (BWS_LINE_WIDTH/2-2)
        .db 0xa0
        .endm
        .db 0xaa
.endm

DEBUG=0

.macro TITLE_IMG_CONTENT
        .ascii '\256\236\236\236\236\236\236\236\236\236\255           \212   \212\212  \212 '
        .ascii '\237\271\266\263\262\266\270 \275\260\300          \212 \212\222\223\236\236\226\225\212\212'
        .db 0x9f,0xb8,0xb7,0x20,0xb5,0x20,0x20,0x20 ;.87 5   
        .db 0xb5,0x20,0xc0,0x20,0x20,0x20,0x20,0x20 ;5 @     
        .db 0x20,0x20,0x20,0x20,0x20,0x8a,0x20,0x99 ;     . .
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x9b,0x20 ;      . 
        .db 0x9f,0xb3,0x20,0xb4,0xb5,0x20,0xb2,0x20 ;.3 45 2 
        .db 0xb5,0x20,0xc0,0x20,0x20,0x20,0x20,0x20 ;5 @     
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x98 ;       .
        .db 0x20,0xc9,0x20,0x20,0xc9,0x20,0x9c,0x20 ; I  I . 
        .db 0x9f,0xb1,0xb6,0x20,0x20,0xb6,0xb0,0x20 ;.16  60 
        .db 0xb6,0xb0,0xc0,0x20,0x92,0x93,0x9e,0x9e ;60@ ....
        .db 0x96,0x95,0x20,0x20,0x20,0x20,0x20,0x9f ;..     .
        .db 0x20,0x20,0x86,0x87,0x20,0x20,0xc0,0x20 ;  ..  @ 
        .db 0x9f,0x70,0x72,0x65,0x73,0x65,0x6e,0x74 ;.present
        .db 0x73,0x3a,0xc0,0x99,0x20,0x20,0x20,0x20 ;s:@.    
        .db 0x20,0x20,0x9b,0x20,0x20,0x20,0x20,0x9b ;  .    .
        .db 0x20,0x20,0x85,0x84,0x20,0x20,0x99,0x20 ;  ..  . 
        .db 0xab,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8 ;+xxxxxxx
        .db 0xf8,0xf8,0xac,0x98,0x20,0xc9,0x20,0x20 ;xx,. I  
        .db 0xc9,0x20,0x9c,0x20,0x20,0x20,0x20,0x9c ;I .    .
        .db 0x20,0x86,0x92,0x95,0x87,0x20,0x98,0x20 ; .... . 
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0x20,0x20,0x9f,0x20,0x20,0x86,0x87 ;   .  ..
        .db 0x20,0x20,0xc0,0x20,0x20,0x20,0x20,0x20 ;  @     
        .db 0x96,0x95,0xf8,0xf8,0x92,0x93,0x20,0x20 ;..xx..  
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0x20,0x20,0x9b,0x20,0x20,0x85,0x84 ;   .  ..
        .db 0x20,0x20,0x99,0x20,0x20,0x20,0x20,0x20 ;  .     
        .db 0x20,0x20,0x9f,0xc0,0x20,0x20,0x20,0x20 ;  .@    
        .db 0x20,0x4e,0x6f,0x77,0x20,0x79,0x6f,0x75 ; Now you
        .db 0x20,0x20,0x20,0x9c,0x20,0x85,0x95,0x92 ;   . ...
        .db 0x84,0x20,0x98,0x20,0x20,0x20,0x20,0x20 ;. .     
        .db 0x20,0xdf,0x9f,0xc0,0xdc,0x20,0x20,0x20 ; _.@\   
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0x20,0x20,0x20,0x96,0x95,0xf8,0xf8 ;    ..xx
        .db 0x92,0x93,0x20,0x20,0x20,0x20,0x20,0x20 ;..      
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0x61,0x72,0x65,0x20,0x68,0x61,0x70 ; are hap
        .db 0x70,0x79,0x20,0xdb,0xf8,0x90,0x20,0x20 ;py [x.  
        .db 0x9e,0x96,0xd8,0x20,0x20,0x20,0x62,0x75 ;..X   bu
        .db 0x74,0x20,0x62,0x65,0x20,0x20,0x20,0x20 ;t be    
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;        
        .db 0x20,0xb7,0xff,0xff,0xb7,0x20,0x20,0x63 ; 7..7  c
        .db 0x61,0x72,0x65,0x66,0x75,0x6c,0x6c,0x21 ;arefull!
        .ascii '                                '
        .ascii '                                '
        .db 0x20,0x20,0x20,0x20,0xb2,0x20,0xb2,0x20 ;    2 2 
        .db 0xb3,0x20,0x20,0x20,0x20,0x20,0x20,0x20 ;3       
        .db 0xb2,0xb3,0xb3,0x20,0x20,0x20,0xb2,0x20 ;233   2 
        .db 0x20,0x20,0xb3,0x20,0x20,0x20,0x20,0x20 ;  3     
        .db 0x20,0xb8,0x20,0x20,0xb5,0xb8,0xbd,0x20 ; 8  58= 
        .db 0xb3,0xb2,0xb2,0x20,0x20,0xb7,0xb3,0x20 ;322  73 
        .db 0xb4,0x20,0xb3,0x20,0xb7,0xb3,0xb5,0x20 ;4 3 735 
        .db 0xb2,0xb7,0xb4,0x20,0xb2,0xb0,0x20,0x20 ;274 20  
        .db 0x20,0xb2,0xb0,0x20,0xb5,0x20,0xb5,0x20 ; 20 5 5 
        .db 0xb4,0xb5,0xb0,0xb4,0xb5,0xb7,0xb9,0xb1 ;45045791
        .db 0xbc,0x20,0xb4,0xb5,0xb7,0xb9,0xb5,0x20 ;< 45795 
        .db 0xb4,0x20,0xb4,0x20,0xb8,0x20,0x20,0x20 ;4 4 8   
        .db 0x20,0xb0,0x20,0x20,0xb5,0x20,0xb5,0xb2 ; 0  5 52
        .db 0xbb,0xb5,0x20,0xbb,0xb1,0xb7,0xb7,0x20 ;;5 ;177 
        .db 0xb4,0xb2,0xbb,0xb1,0xb7,0xb7,0xb5,0xb3 ;42;17753
        .db 0xb8,0xb7,0xb4,0x20,0x20,0xb0,0x20,0x20 ;874  0  
        .ascii '                                '
        .ascii '  fuer Brosig, A2 und Joystick  '
        .ascii '                         PA01/88'
        .ascii '        S   - START             '
        .ascii '        G \235 - AUFWAERTS         '
        .ascii '        O \232 - ABWAERTS          '
        .ascii '        P \224 - LINKS             '
        .ascii '        Q \227 - RECHTS            '
        .ascii '                                '
        .ascii '                                '
        .ascii ' C-1987 SOFTWARE CENTER ILMENAU '
        .ascii '      by DIRK STREHLE           '
        .ascii ' 2017 MOD by Andreas Ziermann    '
.endm
